{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(cmd.exe /c \"taskkill /PID 21388 /F\")",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(redis-cli:*)",
      "Bash(where:*)",
      "Bash(dir:*)",
      "Bash(choco:*)",
      "Bash(tar:*)",
      "Bash(start redis-server.exe redis.windows.conf)",
      "Bash(timeout:*)",
      "Bash(powershell:*)",
      "Bash(redis-cli.exe ping:*)",
      "Bash(.\\redis\\redis-cli.exe:*)",
      "Bash(E:/Github/everything_backend/redis/redis-cli.exe ping)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(curl:*)",
      "Bash(cmd.exe:*)",
      "Bash(npx tsc:*)",
      "Bash(git checkout:*)",
      "Bash(PORT=3000 npm run dev)",
      "Bash(npx ts-node:*)",
      "Bash(cat:*)",
      "Bash(node:*)",
      "WebFetch(domain:localhost)",
      "Bash(grep:*)",
      "Bash(npm run kill-port:*)",
      "Bash(cp:*)",
      "Bash(test:*)",
      "Bash(docker-compose logs:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(openssl req:*)",
      "Bash(docker exec:*)",
      "Bash(docker ps:*)",
      "Bash(Select-String -Pattern \"POST|admin|login|error\")",
      "Bash(Select-Object -Last 10)",
      "Bash(Select-String -Pattern \"PASSWORD-CHECK\" -Context 3,3)",
      "Bash(Select-Object -First 1)",
      "Bash(for i in {1..3})",
      "Bash(do echo \"=== Test $i ===\")",
      "Bash(done)",
      "Bash(for i in 1 2 3 4 5)",
      "Bash(do echo \"=== Login Test #$i ===\")",
      "Bash(for i in {1..5})",
      "Bash(do curl -s http://localhost:3001/health)",
      "Bash(tasklist)",
      "Bash(Get-Content -Path \"logs/combined.log\" -Tail 50 -Wait)",
      "Bash(docker stop:*)",
      "Bash(lsof:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file.routes.ts ===\" grep \"router\\.\\(get\\|post\\|put\\|delete\\)\" \"/Users/paksungho/everything_backend/src/routes/$file.routes.ts\")"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "task-master-ai",
    "supabase"
  ]
}
