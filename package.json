{
  "name": "ebeautything-backend",
  "version": "1.0.0",
  "description": "에뷰리띵 플러터 앱과 웹 관리자 시스템을 지원하는 Node.js 백엔드 서버",
  "main": "dist/app.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "nodemon",
    "dev:clean": "node scripts/kill-port.js 3001 && nodemon",
    "kill-port": "node scripts/kill-port.js",
    "build": "tsc",
    "dev-build": "tsc --skipLibCheck --noEmitOnError false",
    "start": "node dist/app.js",
    "start:dev": "ts-node src/app.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit/ --verbose",
    "test:integration": "jest tests/integration/ --verbose --detectOpenHandles",
    "test:reservation": "jest --testPathPattern=reservation --verbose",
    "test:reservation:unit": "jest tests/unit/ --testPathPattern=reservation --verbose",
    "test:reservation:integration": "jest tests/integration/ --testPathPattern=reservation --verbose --detectOpenHandles",
    "test:coverage:reservation": "jest --coverage --testPathPattern=reservation",
    "test:coverage:report": "jest --coverage --coverageReporters=text-lcov | coveralls",
    "test:reservation:all": "node scripts/run-reservation-tests.js",
    "test:reservation:quick": "node scripts/run-reservation-tests.js --skip-performance --skip-load",
    "test:reservation:full": "node scripts/run-reservation-tests.js --performance --load --verbose",
    "test:performance": "jest tests/performance/ --verbose --detectOpenHandles",
    "test:performance:load": "jest tests/performance/reservation-load-performance.test.ts --verbose --detectOpenHandles",
    "test:performance:database": "node scripts/run-performance-tests.js database",
    "test:performance:api": "jest tests/performance/api-performance.test.ts --verbose --detectOpenHandles",
    "test:performance:all": "jest tests/performance/ --verbose --detectOpenHandles --runInBand",
    "test:e2e": "jest tests/e2e/ --verbose --detectOpenHandles --runInBand",
    "test:e2e:user-journey": "jest tests/e2e/user-journey-e2e.test.ts --verbose --detectOpenHandles --runInBand",
    "test:e2e:automated-simulation": "jest tests/e2e/automated-user-simulation.test.ts --verbose --detectOpenHandles --runInBand",
    "test:e2e:all": "jest tests/e2e/ --verbose --detectOpenHandles --runInBand --maxWorkers=1",
    "test:comprehensive": "jest tests/integration/comprehensive-api.test.ts --verbose --detectOpenHandles",
    "test:comprehensive:quick": "node scripts/run-comprehensive-test-suite.js --quick",
    "test:comprehensive:ci": "node scripts/run-comprehensive-test-suite.js --ci --coverage",
    "test:comprehensive:unit": "node scripts/run-comprehensive-test-suite.js --unit --coverage",
    "test:comprehensive:integration": "node scripts/run-comprehensive-test-suite.js --integration",
    "test:comprehensive:performance": "node scripts/run-comprehensive-test-suite.js --performance",
    "test:comprehensive:e2e": "node scripts/run-comprehensive-test-suite.js --e2e",
    "test:comprehensive:security": "node scripts/run-comprehensive-test-suite.js --security",
    "test:security": "ts-node tests/security/security-test-suite.ts",
    "test:security:auth": "jest tests/security/auth-security.test.ts --verbose",
    "test:security:rbac": "jest tests/security/rbac-security.test.ts --verbose",
    "test:security:rate-limit": "jest tests/security/rate-limit-security.test.ts --verbose",
    "test:security:integration": "jest tests/security/integration-security.test.ts --verbose",
    "test:security:report": "jest tests/security/ --json --outputFile=security-test-results.json",
    "test:supabase": "node scripts/run-supabase-tests.js",
    "test:supabase:comprehensive": "node scripts/comprehensive-api-test.js",
    "test:supabase:load": "jest tests/performance/supabase-load-test.ts --verbose --detectOpenHandles",
    "test:supabase:database": "jest tests/integration/database-functions.test.ts --verbose --detectOpenHandles",
    "test:supabase:database:basic": "jest tests/integration/database-functions-basic.test.ts --verbose --detectOpenHandles",
    "test:supabase:basic": "jest tests/integration/supabase-basic-operations.test.ts --verbose --detectOpenHandles",
    "test:comprehensive:full": "node scripts/run-comprehensive-test.js",
    "start-deps": "node scripts/start-dependencies.js",
    "test:auth-comprehensive": "jest tests/integration/auth-comprehensive.test.ts --verbose --detectOpenHandles",
    "test:api-basic": "jest tests/integration/api-endpoints-basic.test.ts --verbose --detectOpenHandles",
    "migrate": "node scripts/migrate.js up",
    "test:api": "jest tests/integration/ --verbose --detectOpenHandles",
    "test:no-supabase": "node scripts/test-without-supabase.js",
    "test:all": "npm run test:supabase:comprehensive",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "precommit": "npm run lint && npm run test",
    "clean": "rimraf dist",
    "migrate:status": "node scripts/migrate.js status",
    "migrate:validate": "node scripts/migrate.js validate",
    "migrate:rollback": "node scripts/migrate.js rollback",
    "migrate:rollback-to": "node scripts/migrate.js rollback-to",
    "deploy:validate": "node scripts/validate-deployment.js",
    "seed": "node scripts/seed.js run",
    "seed:generate": "node scripts/seed.js generate",
    "seed:clear": "node scripts/seed.js clear",
    "db:setup": "npm run migrate && npm run seed",
    "db:reset": "npm run seed:clear && npm run migrate && npm run seed",
    "test:setup": "node scripts/setup-test-environment.js",
    "test:with-setup": "node scripts/run-tests-with-setup.js",
    "test:unit:fixed": "node scripts/run-tests-with-setup.js tests/unit",
    "test:integration:fixed": "node scripts/run-tests-with-setup.js tests/integration",
    "test:all:fixed": "node scripts/run-tests-with-setup.js",
    "setup-test-data": "ts-node scripts/setup-test-data.ts",
    "test:comprehensive:fixed": "jest tests/unit --setupFilesAfterEnv tests/setup-comprehensive.ts --maxWorkers=1 --testTimeout=30000",
    "test:unit:coverage": "jest tests/unit/ --coverage --verbose",
    "test:unit:watch": "jest tests/unit/ --watch --verbose",
    "test:coverage:detailed": "jest --coverage --coverageReporters=text --coverageReporters=html --coverageReporters=lcov",
    "test:coverage:ci": "jest --coverage --coverageReporters=text --coverageReporters=lcov --watchAll=false",
    "test:coverage:threshold": "jest --coverage --passWithNoTests",
    "test:unit:reservation": "jest tests/unit/ --testPathPattern=reservation --coverage --verbose",
    "test:unit:services": "jest tests/unit/ --testPathPattern=service --coverage --verbose",
    "test:unit:controllers": "jest tests/unit/ --testPathPattern=controller --coverage --verbose",
    "test:performance:quick": "node scripts/run-performance-tests.js quick",
    "test:performance:standard": "node scripts/run-performance-tests.js standard",
    "test:performance:comprehensive": "node scripts/run-performance-tests.js comprehensive",
    "test:performance:reservation": "node scripts/run-performance-tests.js reservation",
    "test:performance:coverage": "node scripts/run-performance-tests.js comprehensive --coverage",
    "test:integration:quick": "node scripts/run-integration-tests.js quick",
    "test:integration:workflow": "node scripts/run-integration-tests.js workflow",
    "test:integration:api": "node scripts/run-integration-tests.js api",
    "test:integration:comprehensive": "node scripts/run-integration-tests.js comprehensive",
    "test:integration:database": "node scripts/run-integration-tests.js database",
    "test:integration:payment": "node scripts/run-integration-tests.js payment",
    "test:integration:notification": "node scripts/run-integration-tests.js notification",
    "test:integration:coverage": "node scripts/run-integration-tests.js comprehensive --coverage",
    "test:e2e:quick": "node scripts/run-e2e-tests.js quick",
    "test:e2e:journey": "node scripts/run-e2e-tests.js journey",
    "test:e2e:simulation": "node scripts/run-e2e-tests.js simulation",
    "test:e2e:comprehensive": "node scripts/run-e2e-tests.js comprehensive",
    "test:e2e:stress": "node scripts/run-e2e-tests.js stress",
    "test:e2e:analytics": "node scripts/run-e2e-tests.js analytics",
    "test:e2e:smoke": "node scripts/run-e2e-tests.js smoke",
    "test:e2e:coverage": "node scripts/run-e2e-tests.js comprehensive --coverage",
    "test:security:basic": "node scripts/run-security-tests.js basic",
    "test:security:comprehensive": "node scripts/run-security-tests.js comprehensive",
    "test:security:penetration": "node scripts/run-security-tests.js penetration",
    "test:security:compliance": "node scripts/run-security-tests.js compliance",
    "test:security:performance": "node scripts/run-security-tests.js performance",
    "test:security:vulnerability": "node scripts/run-security-tests.js vulnerability",
    "test:security:all": "node scripts/run-security-tests.js comprehensive",
    "test:refund:unit": "node scripts/run-refund-tests.js unit",
    "test:refund:integration": "node scripts/run-refund-tests.js integration",
    "test:refund:comprehensive": "node scripts/run-refund-tests.js comprehensive",
    "test:refund:performance": "node scripts/run-refund-tests.js performance",
    "test:refund:all": "node scripts/run-refund-tests.js all",
    "test:reconciliation:unit": "node scripts/run-reconciliation-tests.js unit",
    "test:reconciliation:integration": "node scripts/run-reconciliation-tests.js integration",
    "test:reconciliation:performance": "node scripts/run-reconciliation-tests.js performance",
    "test:reconciliation:comprehensive": "node scripts/run-reconciliation-tests.js comprehensive",
    "test:reconciliation:coverage": "node scripts/run-reconciliation-tests.js coverage",
    "test:reconciliation:watch": "node scripts/run-reconciliation-tests.js watch",
    "test:reconciliation:all": "node scripts/run-reconciliation-tests.js all",
    "migrate:portone-v2": "ts-node scripts/run-portone-v2-migration.ts",
    "migrate:portone-v2:verify": "ts-node scripts/run-portone-v2-migration.ts --verify-only",
    "migrate:portone-v2:check": "ts-node scripts/run-portone-v2-migration-advanced.ts",
    "migrate:portone-v2:add-columns": "ts-node scripts/add-portone-columns.ts"
  },
  "keywords": [
    "nodejs",
    "express",
    "typescript",
    "beauty",
    "reservation",
    "supabase",
    "toss-payments"
  ],
  "author": "에뷰리띵",
  "license": "MIT",
  "dependencies": {
    "@portone/server-sdk": "^0.17.0",
    "@supabase/supabase-js": "^2.57.4",
    "@tosspayments/payment-sdk": "^1.9.1",
    "@types/bcrypt": "^6.0.0",
    "@types/csrf": "^1.3.2",
    "@types/node-cron": "^3.0.11",
    "@types/redis": "^4.0.10",
    "axios": "^1.6.2",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "cron": "^3.1.6",
    "csrf": "^3.1.0",
    "csv-parser": "^3.2.0",
    "date-fns": "^3.0.6",
    "dompurify": "^3.2.7",
    "dotenv": "^16.6.1",
    "drizzle-orm": "^0.44.5",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.0.1",
    "firebase-admin": "^12.7.0",
    "helmet": "^7.2.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsdom": "^27.0.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^4.2.1",
    "pg": "^8.11.3",
    "rate-limiter-flexible": "^7.2.0",
    "redis": "^5.6.1",
    "sharp": "^0.33.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^9.0.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^10.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.6",
    "@types/cors": "^2.8.19",
    "@types/cron": "^2.4.0",
    "@types/dompurify": "^3.0.5",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.4",
    "@types/pg": "^8.10.9",
    "@types/supertest": "^2.0.16",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ebeautything/backend.git"
  },
  "bugs": {
    "url": "https://github.com/ebeautything/backend/issues"
  },
  "homepage": "https://github.com/ebeautything/backend#readme"
}
