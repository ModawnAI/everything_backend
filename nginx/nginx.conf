# =============================================
# Nginx Configuration for 에뷰리띵 Backend
# Reverse Proxy, Load Balancing, SSL/TLS
# =============================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # =============================================
    # Logging Configuration
    # =============================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;

    # =============================================
    # Performance Optimizations
    # =============================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # =============================================
    # Upstream Backend Servers
    # =============================================
    upstream backend_servers {
        least_conn;  # Load balancing method
        server backend:3001 max_fails=3 fail_timeout=30s;
        # Add more backend servers for horizontal scaling:
        # server backend2:3001 max_fails=3 fail_timeout=30s;
        # server backend3:3001 max_fails=3 fail_timeout=30s;

        keepalive 32;
    }

    # =============================================
    # Rate Limiting Zones
    # =============================================
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # =============================================
    # HTTP Server (Redirect to HTTPS)
    # =============================================
    server {
        listen 80;
        server_name api.ebeautything.com;

        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # =============================================
    # HTTPS Server (Main API)
    # =============================================
    server {
        listen 443 ssl http2;
        server_name api.ebeautything.com;

        # =============================================
        # SSL/TLS Configuration
        # =============================================
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # =============================================
        # Security Headers
        # =============================================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # =============================================
        # API Routes
        # =============================================
        location / {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            # Proxy settings
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # =============================================
        # Auth Routes (Stricter Rate Limiting)
        # =============================================
        location /api/auth {
            limit_req zone=auth_limit burst=5 nodelay;

            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # =============================================
        # WebSocket Routes
        # =============================================
        location /api/websocket {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # =============================================
        # Health Check
        # =============================================
        location /health {
            access_log off;
            proxy_pass http://backend_servers/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # =============================================
        # Static Files & Documentation
        # =============================================
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://backend_servers;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # API Documentation
        location /api-docs {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # =============================================
        # Security: Block Common Attack Patterns
        # =============================================
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/(config|\.env) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # =============================================
    # Admin Panel (Separate subdomain with stricter rules)
    # =============================================
    server {
        listen 443 ssl http2;
        server_name admin.ebeautything.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Admin-specific security headers
        add_header X-Frame-Options "DENY" always;
        add_header Content-Security-Policy "default-src 'self'" always;

        location / {
            # Stricter rate limiting for admin
            limit_req zone=api_limit burst=10 nodelay;

            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
